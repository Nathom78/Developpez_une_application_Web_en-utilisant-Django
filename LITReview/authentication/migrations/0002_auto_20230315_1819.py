# Generated by Django 4.1.7 on 2023-03-15 17:19
from django.core.management.sql import emit_post_migrate_signal
from django.db import migrations


def create_groups(apps, schema_migration):
    emit_post_migrate_signal(2, False, 'default')
    User = apps.get_model('authentication', 'MyUser')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    add_ticket = Permission.objects.get(codename='add_ticket')
    change_ticket = Permission.objects.get(codename='change_ticket')
    delete_ticket = Permission.objects.get(codename='delete_ticket')
    view_ticket = Permission.objects.get(codename='view_ticket')

    add_review = Permission.objects.get(codename='add_review')
    change_review = Permission.objects.get(codename='change_review')
    delete_review = Permission.objects.get(codename='delete_review')
    view_review = Permission.objects.get(codename='view_review')

    administrator_permissions = [
        add_ticket,
        change_ticket,
        delete_ticket,
        view_ticket,
        add_review,
        change_review,
        delete_review,
        view_review,
    ]

    subscriber_permissions = [
        view_ticket,
        add_ticket,
        view_review,
        add_review,
    ]

    administrators = Group(name='administrators')
    administrators.save()
    administrators.permissions.set(administrator_permissions)
    subscribers = Group(name='subscribers')
    subscribers.save()
    subscribers.permissions.set(subscriber_permissions)

    for user in User.objects.all():
        if user.role == 'ADMINISTRATOR':
            administrators.user_set.add(user)
        if user.role == 'SUBSCRIBER':
            subscribers.user_set.add(user)


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_groups)
    ]
